-- MySQL Script generated by MySQL Workbench
-- Wed Dec  1 01:45:56 2021
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema postal_office
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema postal_office
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `postal_office` DEFAULT CHARACTER SET utf8 ;
USE `postal_office` ;

-- -----------------------------------------------------
-- Table `postal_office`.`positions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`positions` (
  `position_id` INT NOT NULL AUTO_INCREMENT,
  `position_name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`position_id`),
  UNIQUE INDEX `position_name_UNIQUE` (`position_name` ASC) VISIBLE,
  UNIQUE INDEX `position_id_UNIQUE` (`position_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`group_users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`group_users` (
  `group_user_id` INT NOT NULL AUTO_INCREMENT,
  `group_name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`group_user_id`),
  UNIQUE INDEX `access_group_UNIQUE` (`group_name` ASC) VISIBLE,
  UNIQUE INDEX `group_user_id_UNIQUE` (`group_user_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`workers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`workers` (
  `worker_id` INT NOT NULL AUTO_INCREMENT,
  `worker_last_name` VARCHAR(32) NOT NULL,
  `worker_first_name` VARCHAR(32) NOT NULL,
  `worker_middle_name` VARCHAR(32) NOT NULL,
  `worker_email` VARCHAR(64) NULL,
  `worker_date_of_birth` DATE NOT NULL,
  `worker_phone_number` VARCHAR(20) NOT NULL,
  `worker_password` VARCHAR(64) NOT NULL DEFAULT 'root',
  `position_id` INT NOT NULL,
  `group_user_id` INT NOT NULL,
  PRIMARY KEY (`worker_id`),
  UNIQUE INDEX `phone_number_UNIQUE` (`worker_phone_number` ASC) VISIBLE,
  INDEX `fk_workers_positions1_idx` (`position_id` ASC) VISIBLE,
  INDEX `fk_workers_group_users1_idx` (`group_user_id` ASC) VISIBLE,
  UNIQUE INDEX `worker_id_UNIQUE` (`worker_id` ASC) VISIBLE,
  CONSTRAINT `fk_workers_positions1`
    FOREIGN KEY (`position_id`)
    REFERENCES `postal_office`.`positions` (`position_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_workers_group_users1`
    FOREIGN KEY (`group_user_id`)
    REFERENCES `postal_office`.`group_users` (`group_user_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`operations`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`operations` (
  `operation_id` INT NOT NULL AUTO_INCREMENT,
  `operation_date_time` DATETIME NOT NULL,
  `worker_id` INT NOT NULL,
  `total_price` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`operation_id`),
  INDEX `fk_Operation_Worker1_idx` (`worker_id` ASC) VISIBLE,
  UNIQUE INDEX `operation_id_UNIQUE` (`operation_id` ASC) VISIBLE,
  CONSTRAINT `fk_Operation_Worker1`
    FOREIGN KEY (`worker_id`)
    REFERENCES `postal_office`.`workers` (`worker_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`goods_for_sale`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`goods_for_sale` (
  `good_for_sale_id` INT NOT NULL AUTO_INCREMENT,
  `good_name` VARCHAR(64) NOT NULL,
  `good_amount` INT UNSIGNED NOT NULL DEFAULT 0,
  `good_price` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`good_for_sale_id`),
  UNIQUE INDEX `good_name_UNIQUE` (`good_name` ASC) VISIBLE,
  UNIQUE INDEX `good_for_sale_id_UNIQUE` (`good_for_sale_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`sold_goods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`sold_goods` (
  `sold_good_id` INT NOT NULL AUTO_INCREMENT,
  `number_sold` INT UNSIGNED NOT NULL DEFAULT 0,
  `operation_id` INT NOT NULL,
  `good_for_sale_id` INT NOT NULL,
  `sold_goods_price` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`sold_good_id`),
  INDEX `fk_SaleGood_Operation1_idx` (`operation_id` ASC) VISIBLE,
  INDEX `fk_SaleGood_GoodForSale1_idx` (`good_for_sale_id` ASC) VISIBLE,
  UNIQUE INDEX `sold_good_id_UNIQUE` (`sold_good_id` ASC) VISIBLE,
  CONSTRAINT `fk_SaleGood_Operation1`
    FOREIGN KEY (`operation_id`)
    REFERENCES `postal_office`.`operations` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SaleGood_GoodForSale1`
    FOREIGN KEY (`good_for_sale_id`)
    REFERENCES `postal_office`.`goods_for_sale` (`good_for_sale_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`countries_delivery`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`countries_delivery` (
  `country_delivery_id` INT NOT NULL AUTO_INCREMENT COMMENT 'id страны, куда может осуществляться доставка',
  `country_delivery_name` VARCHAR(64) NOT NULL COMMENT 'Название страны, куда может осуществляться доставка',
  PRIMARY KEY (`country_delivery_id`),
  UNIQUE INDEX `country_delivery_name_UNIQUE` (`country_delivery_name` ASC) VISIBLE,
  UNIQUE INDEX `country_delivery_id_UNIQUE` (`country_delivery_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`delivery_goods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`delivery_goods` (
  `delivery_good_id` INT NOT NULL AUTO_INCREMENT COMMENT 'Уникальный id товара, который будет доставлен.',
  `address_delivery` VARCHAR(64) NOT NULL COMMENT 'Адрес, куда надо доставить',
  `sender_first_name` VARCHAR(32) NOT NULL COMMENT 'Имя клиента',
  `sender_last_name` VARCHAR(32) NOT NULL COMMENT 'Фамилия клиента',
  `reciver_first_name` VARCHAR(32) NOT NULL,
  `reciver_last_name` VARCHAR(32) NOT NULL,
  `operation_id` INT NOT NULL COMMENT 'Ссылка на номер операции, к которой принадлежит текущая доставка.',
  `country_delivery_id` INT NOT NULL COMMENT 'Ссылка на страну, в которую будет осуществляться доставка.',
  `delivery_good_price` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`delivery_good_id`),
  INDEX `fk_DeliveryGood_Operation1_idx` (`operation_id` ASC) VISIBLE,
  INDEX `fk_DeliveryGood_CountriesDelivery1_idx` (`country_delivery_id` ASC) VISIBLE,
  UNIQUE INDEX `delivery_good_id_UNIQUE` (`delivery_good_id` ASC) VISIBLE,
  CONSTRAINT `fk_DeliveryGood_Operation1`
    FOREIGN KEY (`operation_id`)
    REFERENCES `postal_office`.`operations` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DeliveryGood_CountriesDelivery1`
    FOREIGN KEY (`country_delivery_id`)
    REFERENCES `postal_office`.`countries_delivery` (`country_delivery_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`providers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`providers` (
  `provider_id` INT NOT NULL AUTO_INCREMENT,
  `provider_name` VARCHAR(32) NOT NULL,
  `provider_email` VARCHAR(64) NULL,
  `provider_phone_number` VARCHAR(32) NULL,
  PRIMARY KEY (`provider_id`),
  UNIQUE INDEX `provider_id_UNIQUE` (`provider_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`available_payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`available_payments` (
  `available_payment_id` INT NOT NULL AUTO_INCREMENT,
  `payment_name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`available_payment_id`),
  UNIQUE INDEX `payment_name_UNIQUE` (`payment_name` ASC) VISIBLE,
  UNIQUE INDEX `available_payment_id_UNIQUE` (`available_payment_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`completed_payments`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`completed_payments` (
  `making_payment_id` INT NOT NULL AUTO_INCREMENT,
  `operation_id` INT NOT NULL,
  `available_payment_id` INT NOT NULL,
  `payment_price` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`making_payment_id`),
  INDEX `fk_MakingPayment_Operation1_idx` (`operation_id` ASC) VISIBLE,
  INDEX `fk_MakingPayment_AvailablePayments1_idx` (`available_payment_id` ASC) VISIBLE,
  UNIQUE INDEX `making_payment_id_UNIQUE` (`making_payment_id` ASC) VISIBLE,
  CONSTRAINT `fk_MakingPayment_Operation1`
    FOREIGN KEY (`operation_id`)
    REFERENCES `postal_office`.`operations` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MakingPayment_AvailablePayments1`
    FOREIGN KEY (`available_payment_id`)
    REFERENCES `postal_office`.`available_payments` (`available_payment_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`payment_methods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`payment_methods` (
  `payment_method_id` INT NOT NULL AUTO_INCREMENT,
  `peyment_method_name` VARCHAR(32) NOT NULL,
  PRIMARY KEY (`payment_method_id`),
  UNIQUE INDEX `peyment_method_name_UNIQUE` (`peyment_method_name` ASC) VISIBLE,
  UNIQUE INDEX `payment_method_id_UNIQUE` (`payment_method_id` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`goods_for_sale_providers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`goods_for_sale_providers` (
  `good_for_sale_id` INT NOT NULL,
  `provider_id` INT NOT NULL,
  PRIMARY KEY (`good_for_sale_id`, `provider_id`),
  INDEX `fk_goods_for_sale_has_providers_providers1_idx` (`provider_id` ASC) VISIBLE,
  INDEX `fk_goods_for_sale_has_providers_goods_for_sale1_idx` (`good_for_sale_id` ASC) VISIBLE,
  CONSTRAINT `fk_goods_for_sale_has_providers_goods_for_sale1`
    FOREIGN KEY (`good_for_sale_id`)
    REFERENCES `postal_office`.`goods_for_sale` (`good_for_sale_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_goods_for_sale_has_providers_providers1`
    FOREIGN KEY (`provider_id`)
    REFERENCES `postal_office`.`providers` (`provider_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `postal_office`.`operations_payment_methods`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `postal_office`.`operations_payment_methods` (
  `operation_id` INT NOT NULL,
  `payment_method_id` INT NOT NULL,
  `sum` INT UNSIGNED NOT NULL DEFAULT 0,
  PRIMARY KEY (`operation_id`, `payment_method_id`),
  INDEX `fk_operations_has_payment_methods_payment_methods1_idx` (`payment_method_id` ASC) VISIBLE,
  INDEX `fk_operations_has_payment_methods_operations1_idx` (`operation_id` ASC) VISIBLE,
  CONSTRAINT `fk_operations_has_payment_methods_operations1`
    FOREIGN KEY (`operation_id`)
    REFERENCES `postal_office`.`operations` (`operation_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_operations_has_payment_methods_payment_methods1`
    FOREIGN KEY (`payment_method_id`)
    REFERENCES `postal_office`.`payment_methods` (`payment_method_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `postal_office`;

DELIMITER $$
USE `postal_office`$$
CREATE DEFINER = CURRENT_USER TRIGGER `postal_office`.`sold_goods_BEFORE_INSERT` BEFORE INSERT ON `sold_goods` 
FOR EACH ROW
SET NEW.sold_goods_price = (NEW.number_sold * (SELECT good_price FROM goods_for_sale WHERE good_for_sale_id = NEW.good_for_sale_id));$$

USE `postal_office`$$
CREATE DEFINER = CURRENT_USER TRIGGER `postal_office`.`sold_goods_AFTER_INSERT` AFTER INSERT ON `sold_goods` 
FOR EACH ROW	
begin
	SET @perem = NEW.sold_goods_price;
	SET @oper_id = NEW.operation_id;
    update operations set operations.total_price = (operations.total_price + @perem) where operations.operation_id LIKE @oper_id;
end$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
